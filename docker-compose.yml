# new
services:
  # kafdrop:
  #   image: obsidiandynamics/kafdrop
  #   restart: 'no'
  #   environment:
  #     KAFKA_BROKERCONNECT: 'kafka:9093'
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - kafka

  db:
    container_name: pg_my_db
    image: postgres:16.0
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=talkToILTS
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - nest-microservices-network

  # zookeeper:
  #   image: wurstmeister/zookeeper:latest
  #   container_name: zookeeper
  #   ports:
  #     - '2181:2181'
  #   networks:
  #     - nest-microservices-network

  # kafka:
  #   image: wurstmeister/kafka:2.13-2.8.1
  #   container_name: kafka
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_CREATE_TOPICS: 'audit-log:1:1,api-log:1:1'
  #   ports:
  #     - '9092:9092'
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - nest-microservices-network

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
    container_name: auth_service
    command: npm run start:dev auth
    depends_on:
      - db
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '4000:4000'
      - '50052:50052' # gRPC service
    networks:
      - nest-microservices-network
    restart: unless-stopped

  tutorial:
    build:
      context: .
      dockerfile: ./apps/tutorial/Dockerfile
    container_name: tutorial_service
    command: npm run start:dev tutorial
    depends_on:
      - db
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '4001:4001'
    networks:
      - nest-microservices-network

volumes:
  postgres-data: # Ensure the volume name matches the reference in the db service

networks:
  nest-microservices-network:
    driver: bridge
